<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"  xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd
	         http://www.springframework.org/schema/lang
	         http://www.springframework.org/schema/lang/spring-lang.xsd      
	         http://www.springframework.org/schema/tx   
	         http://www.springframework.org/schema/tx/spring-tx.xsd    
	         http://www.springframework.org/schema/aop     
	         http://www.springframework.org/schema/aop/spring-aop.xsd    
	         http://www.springframework.org/schema/mvc     
	         http://www.springframework.org/schema/mvc/spring-mvc.xsd   
	         http://www.springframework.org/schema/context     
	         http://www.springframework.org/schema/context/spring-context.xsd
	         http://www.springframework.org/schema/cache
	         http://www.springframework.org/schema/cache/spring-cache.xsd
	         http://www.springframework.org/schema/util
	         http://www.springframework.org/schema/util/spring-util.xsd
	         http://www.springframework.org/schema/task 
	         http://www.springframework.org/schema/task/spring-task.xsd">

	<mvc:annotation-driven />

	<tx:annotation-driven />

	<task:annotation-driven />
	<mvc:annotation-driven
			content-negotiation-manager="contentNegotiationManager" />
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- Turn off working out content type based on URL file extension, should 
			fall back to looking at the Accept headers -->
		<property name="favorPathExtension" value="false" />
	</bean>
   	<!-- 自动扫描的包名 -->
	<context:component-scan base-package="com.very"></context:component-scan>
	
	<aop:aspectj-autoproxy/>	
	   
	<cache:annotation-driven key-generator="keyGeneratorService"/>

	<mvc:resources mapping="/static/**" location="/WEB-INF/static/"
		cache-period="31556926" />
	<mvc:resources mapping="/upload/**" location="/upload/"
		cache-period="31556926" />
		
	<!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="default" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="config" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="folder" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="article" />
				<bean
					class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"
					p:name="media" />
			</set>
		</property>
	</bean>

  

	<!-- FreeMarker的配置 -->
	<bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPaths" value="/WEB-INF/static/" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">10</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-dd</prop>
				<prop key="number_format">#.##</prop>
				<prop key="whitespace_stripping">true</prop>
			</props>
		</property>
	</bean>

	<!-- 配置 FreeMarker视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property>
		<property name="cache" value="false" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>

	<!-- 图片上传的配置 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 最大值4M -->
		<property name="maxUploadSize" value="209715200" />
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- 登陆时验证码的配置 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<!--通过构造函数注入属性值 -->
				<constructor-arg type="java.util.Properties">
					<props>
						<!-- 验证码宽度 -->
						<prop key="kaptcha.image.width">150</prop>
						<!-- 验证码高度 -->
						<prop key="kaptcha.image.height">60</prop>
						<!-- 生成验证码内容范围 -->
						<prop key="kaptcha.textproducer.char.string">abcde2345678gfynmnpwx</prop>
						<!-- 验证码个数 -->
						<prop key="kaptcha.textproducer.char.length">5</prop>
						<!-- 是否有边框 -->
						<prop key="kaptcha.border">no</prop>
						<!-- 验证码字体颜色 -->
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<!-- 验证码字体大小 -->
						<prop key="kaptcha.textproducer.font.size">35</prop>
						<!-- 验证码所属字体样式 -->
						<prop key="kaptcha.textproducer.font.names">Arial, Courier</prop>
						<prop key="kaptcha.background.clear.from">white</prop>
						<prop key="kaptcha.background.clear.to">white</prop>
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
						<!-- 干扰线颜色 -->
						<prop key="kaptcha.noise.color">red</prop>
						<!-- 验证码文本字符间距 -->
						<prop key="kaptcha.textproducer.char.space">4</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<!-- 在XML配置文件中加入外部属性文件，当然也可以指定外部文件的编码 -->
	<bean id="jdbcPropertyConfigurer"  class="com.shishuo.cms.util.PropertyUtils">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value> <!-- 指定外部文件的编码 -->
			</list>
		</property>
	</bean>
	
    <bean id="shishuocmsDataSource"  class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">
        <property name="driverClassName"  value="${jdbc.shishuocms.driver}"/>
        <property name="url"  value="${jdbc.shishuocms.url}"/>
        <property name="username"  value="${jdbc.shishuocms.username}"/>
        <property name="password" value="${jdbc.shishuocms.password}"/>
        <property name="initialSize"  value="${jdbc.initialSize}"/>
        <property name="minIdle"  value="${jdbc.minIdle}"/>
        <property name="maxIdle"  value="${jdbc.maxIdle}"/>
        <property name="maxActive"  value="${jdbc.maxActive}"/>
        <property name="maxWait"  value="${jdbc.maxWait}"/>
        <property name="defaultAutoCommit"  value="${jdbc.defaultAutoCommit}"/>
        <property name="removeAbandoned"  value="${jdbc.removeAbandoned}"/>
        <property name="removeAbandonedTimeout"  value="${jdbc.removeAbandonedTimeout}"/>
        <property name="testWhileIdle"  value="${jdbc.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis"  value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun"  value="${jdbc.numTestsPerEvictionRun}"/>
        <property name="minEvictableIdleTimeMillis"  value="${jdbc.minEvictableIdleTimeMillis}"/>
    </bean>
    
    <bean id="cardDataSource"  class="org.apache.commons.dbcp.BasicDataSource"  destroy-method="close">
        <property name="driverClassName"  value="${jdbc.card.driver}"/>
        <property name="url"  value="${jdbc.card.url}"/>
        <property name="username"  value="${jdbc.card.username}"/>
        <property name="password" value="${jdbc.card.password}"/>
        <property name="initialSize"  value="${jdbc.initialSize}"/>
        <property name="minIdle"  value="${jdbc.minIdle}"/>
        <property name="maxIdle"  value="${jdbc.maxIdle}"/>
        <property name="maxActive"  value="${jdbc.maxActive}"/>
        <property name="maxWait"  value="${jdbc.maxWait}"/>
        <property name="defaultAutoCommit"  value="${jdbc.defaultAutoCommit}"/>
        <property name="removeAbandoned"  value="${jdbc.removeAbandoned}"/>
        <property name="removeAbandonedTimeout"  value="${jdbc.removeAbandonedTimeout}"/>
        <property name="testWhileIdle"  value="${jdbc.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis"  value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun"  value="${jdbc.numTestsPerEvictionRun}"/>
        <property name="minEvictableIdleTimeMillis"  value="${jdbc.minEvictableIdleTimeMillis}"/>
    </bean>
    

    <bean id="multipleDataSource"  class="com.very.util.db.MultipleDataSource">
        <property name="defaultTargetDataSource"  ref="shishuocmsDataSource"/>
        <property name="targetDataSources">
            <map>
                <entry key="shishuocmsDataSource"  value-ref="shishuocmsDataSource"/>
                <entry key="cardDataSource"  value-ref="cardDataSource"/>
            </map>
        </property>
    </bean>
    
    	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource" />
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multipleDataSource" />
	</bean>
    <!-- 注册拦截器 -->
    <mvc:interceptors>
        <bean class="com.shishuo.cms.filter.GlobalInterceptor" />
    </mvc:interceptors>

</beans>
